2025-02-06 01:11:16 [http-nio-8081-exec-4] INFO  API - === START ===
2025-02-06 01:11:16 [http-nio-8081-exec-4] INFO  API - Request: Method: GET, URI: /v1/location/TEST%20005, Payload: 
2025-02-06 01:11:18 [http-nio-8081-exec-4] INFO  API - Response: Status: 200, Payload: {"status":true,"msg":"Get Postcode Successfully!","data":{"postcode":"TEST 005","latitude":126.0,"longitude":126.0}}
2025-02-06 01:11:18 [http-nio-8081-exec-4] INFO  API - Time used for execute: 2198 ms
2025-02-06 01:11:18 [http-nio-8081-exec-4] INFO  API - ===  END  ===
2025-02-06 01:11:26 [http-nio-8081-exec-3] INFO  API - === START ===
2025-02-06 01:11:26 [http-nio-8081-exec-3] INFO  API - Request: Method: POST, URI: /v1/location/cal-distance, Payload: {    "postcodeA": "AB10 1XG",    "postcodeB": "ZE1 0FJ"}
2025-02-06 01:11:27 [http-nio-8081-exec-3] INFO  API - Response: Status: 200, Payload: {"status":true,"msg":"Calculated Distance successfully!","data":{"locations":[{"postcode":"AB10 1XG","latitude":57.144165,"longitude":-2.114848},{"postcode":"ZE1 0FJ","latitude":60.140839,"longitude":-1.263912}],"distance":336.8256501413211,"unit":"km"}}
2025-02-06 01:11:27 [http-nio-8081-exec-3] INFO  API - Time used for execute: 420 ms
2025-02-06 01:11:27 [http-nio-8081-exec-3] INFO  API - ===  END  ===
2025-02-06 01:17:32 [http-nio-8081-exec-10] INFO  API - === START ===
2025-02-06 01:17:32 [http-nio-8081-exec-10] INFO  API - Request: Method: GET, URI: /v1/location/TEST%20006, Payload: 
2025-02-06 01:17:38 [http-nio-8081-exec-10] INFO  API - Response: Status: 404, Payload: {"status":false,"msg":"Not found postcode","data":null}
2025-02-06 01:17:38 [http-nio-8081-exec-10] INFO  API - Time used for execute: 5749 ms
2025-02-06 01:17:38 [http-nio-8081-exec-10] INFO  API - ===  END  ===
2025-02-06 01:17:59 [http-nio-8081-exec-7] INFO  API - === START ===
2025-02-06 01:17:59 [http-nio-8081-exec-7] INFO  API - Request: Method: POST, URI: /v1/location, Payload: {    "postcode": "TEST 005",    "latitude": "126.00000",}
2025-02-06 01:17:59 [http-nio-8081-exec-7] ERROR API - Exception: 
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:409)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:357)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:204)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:176)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:150)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:226)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:180)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.example.distancecounter.common.logging.LoggingFilter.doFilter(LoggingFilter.java:35)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): was expecting double-quote to start field name
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 57]
	at com.fasterxml.jackson.core.JsonParser._constructReadException(JsonParser.java:2660)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:741)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleOddName(UTF8StreamJsonParser.java:2103)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(UTF8StreamJsonParser.java:1753)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1040)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:406)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2125)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1501)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:398)
	... 54 common frames omitted
2025-02-06 01:17:59 [http-nio-8081-exec-7] INFO  API - Response: Status: 500, Payload: {"status":false,"msg":"Internal Server Error","data":null}
2025-02-06 01:17:59 [http-nio-8081-exec-7] INFO  API - Time used for execute: 13 ms
2025-02-06 01:17:59 [http-nio-8081-exec-7] INFO  API - ===  END  ===
2025-02-06 01:18:03 [http-nio-8081-exec-9] INFO  API - === START ===
2025-02-06 01:18:03 [http-nio-8081-exec-9] INFO  API - Request: Method: POST, URI: /v1/location, Payload: {    "postcode": "TEST 005",    "latitude": "126.00000"}
2025-02-06 01:18:03 [http-nio-8081-exec-9] INFO  API - Response: Status: 500, Payload: {"status":false,"msg":"Insert Postcode failed","data":null}
2025-02-06 01:18:03 [http-nio-8081-exec-9] INFO  API - Time used for execute: 34 ms
2025-02-06 01:18:03 [http-nio-8081-exec-9] INFO  API - ===  END  ===
2025-02-06 01:18:32 [http-nio-8081-exec-1] INFO  API - === START ===
2025-02-06 01:18:32 [http-nio-8081-exec-1] INFO  API - Request: Method: POST, URI: /v1/location/cal-distance, Payload: {    "postcodeA": "AB10 1XG",}
2025-02-06 01:18:32 [http-nio-8081-exec-1] ERROR API - Exception: 
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('}' (code 125)): was expecting double-quote to start field name
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:409)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:357)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:204)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:176)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:150)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:226)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:180)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.example.distancecounter.common.logging.LoggingFilter.doFilter(LoggingFilter.java:35)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('}' (code 125)): was expecting double-quote to start field name
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 30]
	at com.fasterxml.jackson.core.JsonParser._constructReadException(JsonParser.java:2660)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:741)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleOddName(UTF8StreamJsonParser.java:2103)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(UTF8StreamJsonParser.java:1753)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1040)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:406)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2125)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1501)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:398)
	... 54 common frames omitted
2025-02-06 01:18:32 [http-nio-8081-exec-1] INFO  API - Response: Status: 500, Payload: {"status":false,"msg":"Internal Server Error","data":null}
2025-02-06 01:18:32 [http-nio-8081-exec-1] INFO  API - Time used for execute: 4 ms
2025-02-06 01:18:32 [http-nio-8081-exec-1] INFO  API - ===  END  ===
2025-02-06 01:18:37 [http-nio-8081-exec-3] INFO  API - === START ===
2025-02-06 01:18:37 [http-nio-8081-exec-3] INFO  API - Request: Method: POST, URI: /v1/location/cal-distance, Payload: {    "postcodeA": "AB10 1XG"}
2025-02-06 01:18:37 [http-nio-8081-exec-3] INFO  API - Response: Status: 400, Payload: {"status":false,"msg":"Error - postCodeB is required","data":null}
2025-02-06 01:18:37 [http-nio-8081-exec-3] INFO  API - Time used for execute: 9 ms
2025-02-06 01:18:37 [http-nio-8081-exec-3] INFO  API - ===  END  ===
2025-02-06 01:18:47 [http-nio-8081-exec-5] INFO  API - === START ===
2025-02-06 01:18:47 [http-nio-8081-exec-5] INFO  API - Request: Method: POST, URI: /v1/location/cal-distance, Payload: {    "postcodeA": "AB10 1XG",    "postcodeB": "ZE1 0FJ"}
2025-02-06 01:18:47 [http-nio-8081-exec-5] INFO  API - Response: Status: 404, Payload: {"status":false,"msg":"Not found pointA or pointB","data":null}
2025-02-06 01:18:47 [http-nio-8081-exec-5] INFO  API - Time used for execute: 41 ms
2025-02-06 01:18:47 [http-nio-8081-exec-5] INFO  API - ===  END  ===
2025-02-06 01:19:22 [http-nio-8081-exec-10] INFO  API - === START ===
2025-02-06 01:19:22 [http-nio-8081-exec-10] INFO  API - Request: Method: POST, URI: /v1/location/cal-distance, Payload: {    "postcodeA": "AB10 1XG",    "postcodeB": "AB11 5QN"}
2025-02-06 01:19:22 [http-nio-8081-exec-10] INFO  API - Response: Status: 404, Payload: {"status":false,"msg":"Not found pointA or pointB","data":null}
2025-02-06 01:19:22 [http-nio-8081-exec-10] INFO  API - Time used for execute: 42 ms
2025-02-06 01:19:22 [http-nio-8081-exec-10] INFO  API - ===  END  ===
2025-02-06 01:21:34 [http-nio-8081-exec-9] INFO  API - === START ===
2025-02-06 01:21:34 [http-nio-8081-exec-9] INFO  API - Request: Method: GET, URI: /v1/location/TEST%20006, Payload: 
2025-02-06 01:21:34 [http-nio-8081-exec-9] INFO  API - Response: Status: 404, Payload: {"status":false,"msg":"Not found postcode","data":null}
2025-02-06 01:21:34 [http-nio-8081-exec-9] INFO  API - Time used for execute: 28 ms
2025-02-06 01:21:34 [http-nio-8081-exec-9] INFO  API - ===  END  ===
2025-02-06 01:21:36 [http-nio-8081-exec-6] INFO  API - === START ===
2025-02-06 01:21:36 [http-nio-8081-exec-6] INFO  API - Request: Method: GET, URI: /v1/location/TEST%20005, Payload: 
2025-02-06 01:21:36 [http-nio-8081-exec-6] INFO  API - Response: Status: 404, Payload: {"status":false,"msg":"Not found postcode","data":null}
2025-02-06 01:21:36 [http-nio-8081-exec-6] INFO  API - Time used for execute: 27 ms
2025-02-06 01:21:36 [http-nio-8081-exec-6] INFO  API - ===  END  ===
2025-02-06 01:21:55 [http-nio-8081-exec-1] INFO  API - === START ===
2025-02-06 01:21:55 [http-nio-8081-exec-1] INFO  API - Request: Method: GET, URI: /v1/location/TEST%20005, Payload: 
2025-02-06 01:21:55 [http-nio-8081-exec-1] INFO  API - Response: Status: 404, Payload: {"status":false,"msg":"Not found postcode","data":null}
2025-02-06 01:21:55 [http-nio-8081-exec-1] INFO  API - Time used for execute: 26 ms
2025-02-06 01:21:55 [http-nio-8081-exec-1] INFO  API - ===  END  ===
2025-02-06 01:22:37 [http-nio-8081-exec-2] INFO  API - === START ===
2025-02-06 01:22:37 [http-nio-8081-exec-2] INFO  API - Request: Method: GET, URI: /v1/location/TEST%20005, Payload: 
2025-02-06 01:22:37 [http-nio-8081-exec-2] INFO  API - Response: Status: 404, Payload: {"status":false,"msg":"Not found postcode","data":null}
2025-02-06 01:22:37 [http-nio-8081-exec-2] INFO  API - Time used for execute: 133 ms
2025-02-06 01:22:37 [http-nio-8081-exec-2] INFO  API - ===  END  ===
2025-02-06 01:22:39 [http-nio-8081-exec-3] INFO  API - === START ===
2025-02-06 01:22:39 [http-nio-8081-exec-3] INFO  API - Request: Method: GET, URI: /v1/location/TEST%20005, Payload: 
2025-02-06 01:22:39 [http-nio-8081-exec-3] INFO  API - Response: Status: 404, Payload: {"status":false,"msg":"Not found postcode","data":null}
2025-02-06 01:22:39 [http-nio-8081-exec-3] INFO  API - Time used for execute: 33 ms
2025-02-06 01:22:39 [http-nio-8081-exec-3] INFO  API - ===  END  ===
2025-02-06 01:23:37 [http-nio-8081-exec-4] INFO  API - === START ===
2025-02-06 01:23:37 [http-nio-8081-exec-4] INFO  API - Request: Method: GET, URI: /v1/location/TEST%20005, Payload: 
2025-02-06 01:23:37 [http-nio-8081-exec-4] INFO  API - Response: Status: 200, Payload: {"status":true,"msg":"Get Postcode Successfully!","data":{"postcode":"TEST 005","latitude":126.0,"longitude":126.0}}
2025-02-06 01:23:37 [http-nio-8081-exec-4] INFO  API - Time used for execute: 155 ms
2025-02-06 01:23:37 [http-nio-8081-exec-4] INFO  API - ===  END  ===
2025-02-06 01:23:41 [http-nio-8081-exec-9] INFO  API - === START ===
2025-02-06 01:23:41 [http-nio-8081-exec-9] INFO  API - Request: Method: POST, URI: /v1/location, Payload: {    "postcode": "TEST 005",    "latitude": "126.00000",    "longitude": "126.00000"}
2025-02-06 01:23:41 [http-nio-8081-exec-9] INFO  API - Response: Status: 200, Payload: {"status":true,"msg":"Added Postcode Successfully!","data":null}
2025-02-06 01:23:41 [http-nio-8081-exec-9] INFO  API - Time used for execute: 119 ms
2025-02-06 01:23:41 [http-nio-8081-exec-9] INFO  API - ===  END  ===
2025-02-06 01:24:21 [http-nio-8081-exec-6] INFO  API - === START ===
2025-02-06 01:24:21 [http-nio-8081-exec-6] INFO  API - Request: Method: POST, URI: /v1/location/cal-distance, Payload: {    "postcodeA": "AB10 1XG",    "postcodeB": "AB11 5QN"}
2025-02-06 01:24:21 [http-nio-8081-exec-6] INFO  API - Response: Status: 200, Payload: {"status":true,"msg":"Calculated Distance successfully!","data":{"locations":[{"postcode":"AB10 1XG","latitude":57.144165,"longitude":-2.114848},{"postcode":"AB11 5QN","latitude":57.142701,"longitude":-2.093295}],"distance":1.310388560423319,"unit":"km"}}
2025-02-06 01:24:21 [http-nio-8081-exec-6] INFO  API - Time used for execute: 304 ms
2025-02-06 01:24:21 [http-nio-8081-exec-6] INFO  API - ===  END  ===
2025-02-06 01:26:29 [main] INFO  API - === START ===
2025-02-06 01:26:29 [main] INFO  API - Request: Method: POST, URI: /v1/location/cal-distance, Payload: {"postcodeA":"TEST 001","postcodeB":"TEST 002"}
2025-02-06 01:26:30 [main] INFO  API - Response: Status: 200, Payload: {"status":true,"msg":"Calculated Distance successfully!","data":{"locations":[{"postcode":"TEST 001","latitude":12.34,"longitude":56.78},{"postcode":"TEST 002","latitude":12.34,"longitude":56.78}],"distance":0.0,"unit":"km"}}
2025-02-06 01:26:30 [main] INFO  API - Time used for execute: 471 ms
2025-02-06 01:26:30 [main] INFO  API - ===  END  ===
2025-02-06 01:26:30 [main] INFO  API - === START ===
2025-02-06 01:26:30 [main] INFO  API - Request: Method: GET, URI: /v1/location/TEST%20001, Payload: 
2025-02-06 01:26:30 [main] INFO  API - Response: Status: 200, Payload: {"status":true,"msg":"Get Postcode Successfully!","data":{"postcode":"TEST 001","latitude":12.34,"longitude":56.78}}
2025-02-06 01:26:30 [main] INFO  API - Time used for execute: 18 ms
2025-02-06 01:26:30 [main] INFO  API - ===  END  ===
2025-02-06 01:26:30 [main] INFO  API - === START ===
2025-02-06 01:26:30 [main] INFO  API - Request: Method: POST, URI: /v1/location, Payload: {"postcode":"","latitude":12.34,"longitude":56.78}
2025-02-06 01:26:30 [main] INFO  API - Response: Status: 400, Payload: {"status":false,"msg":"Error - postcode is required","data":null}
2025-02-06 01:26:30 [main] INFO  API - Time used for execute: 48 ms
2025-02-06 01:26:30 [main] INFO  API - ===  END  ===
2025-02-06 01:26:30 [main] INFO  API - === START ===
2025-02-06 01:26:30 [main] INFO  API - Request: Method: POST, URI: /v1/location, Payload: {"postcode":"TEST 001","latitude":12.34,"longitude":56.78}
2025-02-06 01:26:30 [main] INFO  API - Response: Status: 200, Payload: {"status":true,"msg":"Postcode added successfully","data":null}
2025-02-06 01:26:30 [main] INFO  API - Time used for execute: 4 ms
2025-02-06 01:26:30 [main] INFO  API - ===  END  ===
